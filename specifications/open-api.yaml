openapi: 3.0.3
info:
  version: 1.0.0
  title: SmartHome specification
  description: OpenAPI спецификация микросервисов системы SmartHome
paths:
  "/users":
    post:
      tags:
        - UsersService
      summary: Создать учетную запись пользователя
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserRequest'
        required: true
      responses:
        '201':
          description: Created
    patch:
      tags:
        - UsersService
      summary: Изменить пароль учетной записи пользователя
      security:
        - bearerAuth: [ ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePasswordRequest'
        required: true
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
    delete:
      tags:
        - UsersService
      summary: Удалить учетную запись пользователя
      security:
        - bearerAuth: [ ]
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
  /auth:
    post:
      tags:
        - UsersService
      summary: Аутентификация
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '401':
          description: Unauthorized
  /auth/refresh:
    post:
      tags:
        - UsersService
      summary: Обновить токен авторизации
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '401':
          description: Unauthorized
  /profile:
    get:
      tags:
        - UsersService
      summary: Получить профиль пользователя
      security:
        - bearerAuth: [ ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfileResponse'
        '401':
          description: Unauthorized
    patch:
      tags:
        - UsersService
      summary: Обновить профиль пользователя
      security:
        - bearerAuth: [ ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserProfileRequest'
        required: true
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
  /profile/plan:
    post:
      tags:
        - UsersService
      summary: Изменить тарифный план пользователя
      security:
        - bearerAuth: [ ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeSubscriptionPlanRequest'
        required: true
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
  /profile/houses:
    get:
      tags:
        - UsersService
      summary: Получить дома пользователя
      security:
        - bearerAuth: [ ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/House'
        '401':
          description: Unauthorized
    post:
      tags:
        - UsersService
      summary: Добавить дом для пользователя
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddHouseRequest'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddHouseResponse'
        '400':
          description: Тарифный план не позволяет добавить дом (количество исчерпано)
        '401':
          description: Unauthorized
  /profile/houses/{houseId}:
    patch:
      tags:
        - UsersService
      summary: Обновить наименование дома пользователя
      security:
        - bearerAuth: []
      parameters:
        - name: houseId
          in: path
          description: Идентификатор дома
          required: true
          schema:
            type: string
            format: guid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateHouseNameRequest'
        required: true
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
  /profile/houses/{houseId}/locations:
    post:
      tags:
        - UsersService
      summary: Добавить помещение в дом пользователя
      security:
        - bearerAuth: []
      parameters:
        - name: houseId
          in: path
          description: Идентификатор дома
          required: true
          schema:
            type: string
            format: guid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddLocationRequest'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddLocationResponse'
        '401':
          description: Unauthorized
  /profile/houses/{houseId}/locations/{locationId}:
    patch:
      tags:
        - UsersService
      summary: Обновить наименование помещения
      security:
        - bearerAuth: [ ]
      parameters:
        - name: houseId
          in: path
          description: Идентификатор дома
          required: true
          schema:
            type: string
            format: guid
        - name: locationId
          in: path
          description: Идентификатор помещения
          required: true
          schema:
            type: string
            format: guid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateLocationNameRequest'
        required: true
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
    delete:
      tags:
        - UsersService
      summary: Удалить помещения
      security:
        - bearerAuth: [ ]
      parameters:
        - name: houseId
          in: path
          description: Идентификатор дома
          required: true
          schema:
            type: string
            format: guid
        - name: locationId
          in: path
          description: Идентификатор помещения
          required: true
          schema:
            type: string
            format: guid
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
  /devices:
    post:
      tags:
        - DevicesService
      summary: Добавить устройство
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddDeviceRequest'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddDeviceResponse'
        '400':
          description: Тарифный план не позволяет добавить устройство (количество исчерпано)
        '401':
          description: Unauthorized
    get:
      tags:
        - DevicesService
      summary: Получить устройства
      description: |
        Получить устройства для помещения, если не указан параметр locationId,
        будут возвращены все устройства пользователя.
      security:
        - bearerAuth: []
      parameters:
        - name: locationId
          in: query
          description: Идентификатор помещения
          required: false
          schema:
            type: string
            format: guid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDevicesResponse'
        '401':
          description: Unauthorized
  /devices/{deviceId}:
    patch:
      tags:
        - DevicesService
      summary: Обновить имя устройства
      security:
        - bearerAuth: [ ]
      parameters:
        - name: deviceId
          in: path
          description: Идентификатор устройства
          required: true
          schema:
            type: string
            format: guid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDeviceNameRequest'
        required: true
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
  /devices/{deviceId}/parameters:
    get:
      tags:
        - DevicesService
      summary: Получить параметры устройства
      security:
        - bearerAuth: []
      parameters:
        - name: deviceId
          in: path
          description: Идентификатор устройства
          required: true
          schema:
            type: string
            format: guid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDeviceParametersResponse'
        '401':
          description: Unauthorized
    post:
      tags:
        - DevicesService
      summary: Установить параметры устройства
      security:
        - bearerAuth: []
      parameters:
        - name: deviceId
          in: path
          description: Идентификатор устройства
          required: true
          schema:
            type: string
            format: guid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDeviceParametersRequest'
        required: true
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
  /devices/{deviceId}/monitoring-records:
    get:
      tags:
        - DevicesService
      summary: Получить записи телеметрии устройства
      description: |
        Возвращает сокращенную версию записей (без событий).
        При отсутствии значений какого-либо из параметров (startDate, endDate) возвращает 50 последних записей.
      security:
        - bearerAuth: []
      parameters:
        - name: deviceId
          in: path
          description: Идентификатор устройства
          required: true
          schema:
            type: string
            format: guid
        - name: startDate
          in: query
          description: Начальная дата
          required: false
          schema:
            type: string
            format: date-time
        - name: endDate
          in: query
          description: Конечная дата
          required: false
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRecordsResponse'
        '401':
          description: Unauthorized
  /devices/{deviceId}/monitoring-records/{recordId}:
    get:
      tags:
        - DevicesService
      summary: Получить запись телеметрии устройства
      description: Возвращает полную версию записи (с событиями).
      security:
        - bearerAuth: []
      parameters:
        - name: deviceId
          in: path
          description: Идентификатор устройства
          required: true
          schema:
            type: string
            format: guid
        - name: recordId
          in: path
          description: Идентификатор записи
          required: true
          schema:
            type: string
            format: guid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRecordResponse'
        '401':
          description: Unauthorized
  /records:
    get:
      tags:
        - MonitoringService
      summary: Получить записи телеметрии устройства
      description: |
        Возвращает сокращенную версию записей (без событий).
        При отсутствии значений какого-либо из параметров (startDate, endDate) возвращает 50 последних записей.
      parameters:
        - name: deviceId
          in: query
          description: Идентификатор устройства
          required: true
          schema:
            type: string
            format: guid
        - name: startDate
          in: query
          description: Начальная дата
          required: false
          schema:
            type: string
            format: date-time
        - name: endDate
          in: query
          description: Конечная дата
          required: false
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRecordsResponse'
  /records/{recordId}:
    get:
      tags:
        - MonitoringService
      summary: Получить запись телеметрии устройства
      description: Возвращает полную версию записи (с событиями).
      parameters:
        - name: recordId
          in: path
          description: Идентификатор записи
          required: true
          schema:
            type: string
            format: guid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRecordResponse'
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    AuthenticationData:
      type: object
      required:
        - username
        - password
      properties:
        username:
          type: string
        password:
          type: string
    CreateUserRequest:
      allOf:
        - $ref: '#/components/schemas/AuthenticationData'
        - type: object
    UpdatePasswordRequest:
      type: object
      required:
        - password
      properties:
        password:
          type: string
    AuthRequest:
      allOf:
        - $ref: '#/components/schemas/AuthenticationData'
        - type: object
    AuthResponse:
      type: object
      required:
        - token
      properties:
        token:
          type: string
    UserProfileResponse:
      type: object
      required:
        - fullName
        - email
        - plan
      properties:
        fullName:
          type: string
        email:
          type: string
        plan:
          type: string
    UpdateUserProfileRequest:
      type: object
      required:
        - fullName
        - email
      properties:
        fullName:
          type: string
        email:
          type: string
    ChangeSubscriptionPlanRequest:
      type: object
      required:
        - plan
      properties:
        plan:
          type: string
          enum:
            - Basic
            - Advanced
            - Pro
    House:
      type: object
      required:
        - id
        - name
        - address
        - locations
      properties:
        id:
          type: string
        name:
          type: string
        address:
          type: string
        locations:
          type: array
          items:
            $ref: '#/components/schemas/Location'
    Location:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: string
        name:
          type: string
    AddHouseRequest:
      type: object
      required:
        - name
        - address
      properties:
        name:
          type: string
        address:
          type: string
    AddHouseResponse:
      allOf:
        - $ref: '#/components/schemas/House'
        - type: object
    UpdateHouseNameRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string
    AddLocationRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string
    AddLocationResponse:
      type: object
      required:
        - name
      properties:
        name:
          type: string
    UpdateLocationNameRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string
    Device:
      type: object
      required:
        - id
        - serialNumber
        - name
        - type
        - locationId
      properties:
        id:
          type: string
          format: guid
        serialNumber:
          type: string
        name:
          type: string
        type:
          type: string
          enum:
            - Hub
            - Sensor
            - Camera
            - DoorLock
            - Lighting
            - Relay
        locationId:
          type: string
          format: guid
        hubId:
          type: string
          format: guid
    AddDeviceRequest:
      type: object
      required:
        - serialNumber
        - name
        - type
        - locationId
      properties:
        serialNumber:
          type: string
        name:
          type: string
        type:
          type: string
          enum:
            - Hub
            - Sensor
            - Camera
            - DoorLock
            - Lighting
            - Relay
        locationId:
          type: string
          format: guid
        hubId:
          type: string
          format: guid
    AddDeviceResponse:
      allOf:
        - $ref: '#/components/schemas/Device'
        - type: object
    GetDevicesResponse:
      type: object
      required:
        - devices
      properties:
        devices:
          type: array
          items:
            $ref: '#/components/schemas/Device'
    UpdateDeviceNameRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string
    ConfigurationParameter:
      type: object
      required:
        - name
        - value
      properties:
        name:
          type: string
        value:
          type: string
    DeviceParametersCollection:
      type: object
      required:
        - parameters
      properties:
        parameters:
          type: array
          items:
            $ref: '#/components/schemas/ConfigurationParameter'
    GetDeviceParametersResponse:
      allOf:
        - $ref: '#/components/schemas/DeviceParametersCollection'
        - type: object
    UpdateDeviceParametersRequest:
      allOf:
        - $ref: '#/components/schemas/DeviceParametersCollection'
        - type: object
    ShortMonitoringRecord:
      type: object
      required:
        - id
        - date
        - state
        - eventsCount
      properties:
        id:
          type: string
          format: guid
        date:
          type: string
          format: date-time
        state:
          type: string
          enum:
            - Healthy
            - Unhealthy
            - NotAvailable
        eventsCount:
          type: integer
          format: int64
    MonitoringRecord:
      allOf:
        - $ref: '#/components/schemas/ShortMonitoringRecord'
        - type: object
          required:
            - events
          properties:
            events:
              type: array
              items:
                $ref: '#/components/schemas/DeviceEvent'
    DeviceEvent:
      type: object
      required:
        - id
        - date
        - type
        - description
      properties:
        id:
          type: string
          format: guid
        date:
          type: string
          format: date-time
        type:
          type: string
          enum:
            - Reboot
            - PowerDown
            - Alarm
            - CommandReceived
            - CommandExecuted
            - ServiceEvent
        description:
          type: string
    GetRecordsResponse:
      type: object
      required:
        - records
      properties:
        records:
          type: array
          items:
            $ref: '#/components/schemas/ShortMonitoringRecord'
    GetRecordResponse:
      allOf:
        - $ref: '#/components/schemas/MonitoringRecord'
        - type: object